// задача 1
// Задание
// Функция calculateTotalPrice(orderedItems) принимает один параметр orderedItems - массив чисел, и рассчитывает общую сумму его элементов, которая сохраняется в переменной totalPrice и возвращается как результат работы функции.

// Выполни рефакторинг функции так, чтобы вместо цикла for она использовала метод forEach.

// Тесты
// Объявлена функция calculateTotalPrice(orderedItems).
// Для перебора массива orderedItems использован метод forEach.
// Вызов функции calculateTotalPrice([12, 85, 37, 4]) возвращает 138.
// Вызов функции calculateTotalPrice([164, 48, 291]) возвращает 503.
// Вызов функции calculateTotalPrice([412, 371, 94, 63, 176]) возвращает 1116.
// Вызов функции со случайными, но валидными аргументами, возвращает правильное значение.



// function calculateTotalPrice(orderedItems) {
//     let totalPrice = 0;
//     // Пиши код ниже этой строки
  
//     for (let i = 0; i < orderedItems.length; i += 1) {
//       totalPrice += orderedItems[i];
//     }
  
//     // Пиши код выше этой строки
//     return totalPrice;
//   }




// function calculateTotalPrice(orderedItems) {
//     let totalPrice = 0;
//     // Пиши код ниже этой строки
  
//     orderedItems.forEach(function callBack (orderedItem) {
//       totalPrice += orderedItem});
  
//     // Пиши код выше этой строки
//     return totalPrice;
//   }


  // задача 2
//   Задание
//   Функция filterArray(numbers, value) принимает массив чисел numbers и возвращает новый массив, в котором будут только те элементы оригинального массива, которые больше чем значение параметра value.
  
//   Выполни рефакторинг функции так, чтобы вместо цикла for она использовала метод forEach.
  
//   Тесты
//   Объявлена функция filterArray(numbers, value).
//   Для перебора массива numbers использован метод forEach.
//   Вызов функции filterArray([1, 2, 3, 4, 5], 3) возвращает [4, 5].
//   Вызов функции filterArray([1, 2, 3, 4, 5], 4) возвращает [5].
//   Вызов функции filterArray([1, 2, 3, 4, 5], 5) возвращает [].
//   Вызов функции filterArray([12, 24, 8, 41, 76], 38) возвращает [41, 76].
//   Вызов функции filterArray([12, 24, 8, 41, 76], 20) возвращает [24, 41, 76].
//   Вызов функции со случайными, но валидными аргументами, возвращает правильное значение.



//   function filterArray(numbers, value) {
//     const filteredNumbers = [];
//     // Пиши код ниже этой строки
  
//     for (let i = 0; i < numbers.length; i += 1) {
//       if (numbers[i] > value) {
//         filteredNumbers.push(numbers[i]);
//       }
//     }
  
//     // Пиши код выше этой строки
//     return filteredNumbers;
//   }







  // задача 3
  // задача 4
  // задача 5
  // задача 6
  // задача 7
  // задача 8
  // задача 9
  // задача 10
  // задача 11
  // задача 12
  // задача 13
  // задача 14
  // задача 15
  // задача 16
  // задача 17
  // задача 18
  // задача 19
  // задача 20
  // задача 21
  // задача 22
  // задача 23
  // задача 24
  // задача 25
  // задача 26
  // задача 27
  // задача 28
  // задача 29
  // задача 30
  // задача 31
  // задача 32
  // задача 33
  // задача 34
  // задача 35
  // задача 36
  // задача 37
  // задача 38
  // задача 39
  // задача 40
  // задача 41
  // задача 41
  // задача 43
  // задача 44

